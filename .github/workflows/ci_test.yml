name: CI Test

on: [push, pull_request]

jobs:

  test-linux:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        os: [ubuntu-20.04]

    steps:
      - name: Clone Repository
        uses: actions/checkout@v2
      - name: Install Dependencies
        env:
            DEBIAN_FRONTEND: noninteractive
        run: |
          sudo -H apt-get update -y
          sudo -H apt-get install -y dbus libdbus-1-dev python3-dev libgtest-dev libgmock-dev
          sudo -H pip3 install -r $GITHUB_WORKSPACE/test/requirements.txt
      - name: Start DBus
        run: |
          echo "DBUS_SESSION_BUS_ADDRESS=$(dbus-daemon --config-file=/usr/share/dbus-1/session.conf --print-address --fork | cut -d, -f1)" >> $GITHUB_ENV
      - name: Setup Cmake
        uses: jwlawson/actions-setup-cmake@v1.4
        with:
          cmake-version: "3.16.x"
      - name: Unit Tests
        run: |
          mkdir $GITHUB_WORKSPACE/build_unit
          cd $GITHUB_WORKSPACE/build_unit
          cmake -DCMAKE_BUILD_TYPE=Release ../test
          make -j4
          ./simplebluez_test
      - name: Unit Tests with Address Sanitizer
        run: |
          mkdir -p $GITHUB_WORKSPACE/build_asan
          cd $GITHUB_WORKSPACE/build_asan
          cmake -DCMAKE_BUILD_TYPE=Debug -DSIMPLEBLUEZ_SANITIZE=Address ../test
          make -j4
          PYTHONMALLOC=malloc ./simplebluez_test
          cp "$(ls asan_log.txt.* | head -1)" asan_log.txt || true
          (test ! -f asan_log.txt && echo "No ASAN log found") || (cat asan_log.txt && exit 1)
      - name: Unit Tests with Thread Sanitizer
        run: |
          mkdir -p $GITHUB_WORKSPACE/build_tsan
          cd $GITHUB_WORKSPACE/build_tsan
          cmake -DCMAKE_BUILD_TYPE=Debug -DSIMPLEBLUEZ_SANITIZE=Thread ../test
          make -j4
          ./simplebluez_test
          cp "$(ls tsan_log.txt.* | head -1)" tsan_log.txt || true
          (test ! -f tsan_log.txt && echo "No TSAN log found") || (cat tsan_log.txt && exit 1)
